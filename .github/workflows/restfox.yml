name: restfox build

permissions:
  contents: read

on:
  push:
    branches:
      - 'main'
    paths:
      - '**/restfox.yml'

jobs:
  publish-app:
    strategy:
      matrix:
        include:
          # - platform: 'macos-latest' # for Arm based macs (M1 and above).
          #   args: '--target aarch64-apple-darwin'
          # - platform: 'macos-latest' # for Intel based macs.
          #   args: '--target x86_64-apple-darwin'
          # - platform: 'ubuntu-latest'
          #   args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: flawiddsouza/Restfox
          submodules: true

      # - name: Install dependencies (ubuntu only)
      #   if: matrix.platform == 'ubuntu-latest'
      #   uses: awalsh128/cache-apt-pkgs-action@latest
      #   with:
      #     packages: libwebkit2gtk-4.0-dev build-essential curl wget libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev gnome-video-effects gnome-video-effects-extra
      #     version: 1.1

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable # Set this to dtolnay/rust-toolchain@nightly
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'
          cache-dependency-path: |
            packages/ui/package-lock.json
            packages/tauri/package-lock.json
        
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './packages/tauri/src-tauri -> target'

      - name: Build UI
        working-directory: ./packages/ui
        run: |
          git tag v0.40.0
          npm ci
          npm run build-desktop

      - name: Build tauri
        working-directory: ./packages/tauri
        run: |
          echo '' >> src-tauri/Cargo.toml
          echo '[profile.release]' >> src-tauri/Cargo.toml
          echo 'codegen-units = 1' >> src-tauri/Cargo.toml
          echo 'lto = true' >> src-tauri/Cargo.toml
          echo 'opt-level = "s"' >> src-tauri/Cargo.toml
          echo 'panic = "abort"' >> src-tauri/Cargo.toml
          echo 'strip = true' >> src-tauri/Cargo.toml
          npm ci
          npm run build

      - uses: actions/upload-artifact@v4
        name: Upload the artifact
        with:
          name: bundle
          path: packages\tauri\src-tauri\target\release\bundle/msi/*.msi


